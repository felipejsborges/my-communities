# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: felipejsborges
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: my-communities-users-api
# "service" is the name of this project. This will also be added to your AWS resource names.
service: users-api

stages:
  default:
    params:
      tableName: "users-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: ${param:tableName}

functions:
  list-users:
    handler: src/handlers/listUsers.handler
    events:
      - http:
          path: /
          method: get
          cors: true
  create-user:
    handler: src/handlers/createUser.handler
    events:
      - http:
          path: /
          method: post
          # cors: true
  get-user:
    handler: src/handlers/getUser.handler
    events:
      - http:
          path: /{id}
          method: get
          # cors: true
  update-user:
    handler: src/handlers/updateUser.handler
    events:
      - http:
          path: /{id}
          method: put
          # cors: true
  delete-user:
    handler: src/handlers/deleteUser.handler
    events:
      - http:
          path: /{id}
          method: delete
          # cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}
